---
- name: afg
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - name: create project
      file:
        path: /home/vagrant/project
        owner: vagrant
        group: vagrant
        state: directory
        mode: 0755

    - name: add apt key
      become: yes
      apt_key:
        url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
        state: present

    - name: add apt repo
      become: yes
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: install kubectl
      become: yes
      apt:
        name:
          - kubectl
        update_cache: yes

    - name: download minikube
      become: yes
      get_url:
        url: https://storage.googleapis.com/minikube/releases/v0.28.0/minikube-linux-amd64
        dest: /usr/local/bin/minikube
        mode: 0755

    - name: start minikube
      become: yes
      command: /usr/local/bin/minikube start --vm-driver=none
      register: rst
    - debug: msg="{{rst.stdout_lines}}"

    - name: run hello-minikube
      become: yes
      shell: "{{item}}"
      with_items:
        - kubectl run hello-minikube --image=k8s.gcr.io/echoserver:1.10 --port=8080
        - kubectl expose deployment hello-minikube --type=NodePort
        - curl $(minikube service hello-minikube --url)
        - kubectl delete services hello-minikube
        - kubectl delete deployment hello-minikube
      register: rst
    - debug: msg="{{rst.results[2].stdout_lines}}"

    # - name: clone jupyterlab-docker from github
    #   git:
    #     repo: 'https://github.com/hughwang10/jupyterlab-docker.git'
    #     dest: /home/vagrant/project/jupyter/

    - name: clone flask-docker from github
      git:
        repo: 'https://github.com/hughwang10/flask-docker.git'
        dest: /home/vagrant/project/flask-docker/

    # - name: run flask-docker
    #   become: yes
    #   shell: "{{item}}"
    #   with_items:
    #     - kubectl run flask-docker --image=flask-docker_flask-lifegame:latest --port=10080
    #     - kubectl expose deployment flask-docker --type=NodePort
    #   tags: test