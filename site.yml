---
- name: afg
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    vm_name: reusebox001
    vm_timezone: Europe/Dublin
    vm_ip_address: 10.44.147.251
    vm_ip_netmask: 255.255.255.0
    vm_ip_gateway: 10.44.147.1
    vm_ip_dns: 193.181.14.10
    vm_ip_domain: ericsson.com

  tasks:
    - name: Create a VM from a template
      vmware_guest:
        hostname: "{{VC_HOST_IP_ADDRESS}}"
        username: "{{VC_USERNAME}}"
        password: "{{VC_PASSWORD}}"
        validate_certs: no
        folder: vm
        name: "{{vm_name}}"
        guest_id: ubuntu64Guest
        state: poweredon
        template: "{{template_name}}"
        datacenter: afglab
        cluster: afglab-cluster1
        disk:
          - type: thin
            size_gb: 100
            datastore: "{{DATASTORE}}}"
        networks:
        - name: OAM-EXT
          ip: "{{vm_ip_address}}"
          netmask: "{{vm_ip_netmask}}"
          gateway: "{{vm_ip_gateway}}"
        - name: OAM
          ip: 192.168.100.4
          netmask: 255.255.255.0
        customization:
          dns_servers:
            - "{{vm_ip_dns}}"
          domain: "{{vm_ip_domain}}"
          hostname: "{{vm_name}}"
          timezone: "{{vm_timezone}}"
      tags: deploy

    - name: Update repositories cache and install packages
      delegate_to: "{{vm_ip_address}}"
      become: yes
      apt:
        upgrade: dist
      tags: update

    - name: Update repositories cache and install packages
      delegate_to: "{{vm_ip_address}}"
      become: yes
      apt:
        name:
          - vim
          - tree
          - python-pip
          - python3-pip
          - docker.io
          - python-dev
          - libffi-dev
          - gcc
          - libssl-dev
          - python-selinux
        update_cache: yes
      tags: update

    - name: pip install
      delegate_to: "{{vm_ip_address}}"
      become: yes
      pip:
        name:
          - ansible
          - kolla-ansible
          - python-openstackclient
          - python-glanceclient
          - python-neutronclient
        executable: pip3
      tags: update

    - name: copy config files
      delegate_to: "{{vm_ip_address}}"
      become: yes
      command: cp -r /usr/local/share/kolla-ansible/etc_examples/kolla /etc/kolla
      tags: update

    - name: copy inventory file
      delegate_to: "{{vm_ip_address}}"
      become: yes
      command: "cp /usr/local/share/kolla-ansible/ansible/inventory/all-in-one /home/hugh/"
      tags: update

    - name: update globals.yml
      delegate_to: "{{vm_ip_address}}"
      become: yes
      lineinfile:
        dest: /etc/kolla/globals.yml
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^#kolla_base_distro:.*', line: 'kolla_base_distro: "ubuntu"' }
        - { regexp: '^#openstack_release: .*', line: 'openstack_release: "queens"' } # queens, pike, ocata
        - { regexp: '^#kolla_install_type:.*', line: 'kolla_install_type: "source"' }
        - { regexp: '^kolla_internal_vip_address:.*', line: 'kolla_internal_vip_address: "10.44.147.241"' }
        - { regexp: '^#network_interface:.*', line: 'network_interface: "ens160"' }
        - { regexp: '^#neutron_external_interface:.*', line: 'neutron_external_interface: "ens192"' }
        - { regexp: '#nova_compute_virt_type:.*', line: 'nova_compute_virt_type: "kvm"' }
      tags: update

    - name: update globals.yml
      delegate_to: "{{vm_ip_address}}"
      become: yes
      lineinfile:
        dest: /usr/local/share/kolla-ansible/ansible/roles/baremetal/defaults/main.yml
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^enable_host_ntp:.*', line: 'enable_host_ntp: false' }
      tags: update

    - name: update globals.yml
      delegate_to: "{{vm_ip_address}}"
      shell: sudo sh kolla-genpwd
      tags: update1
