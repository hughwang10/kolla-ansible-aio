---
- name: afg
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    vm_datacenter: afglab
    vm_cluster: afglab-cluster1
    vm_folder: vm
    vm_name: reusebox001
    vm_user: hugh
    vm_timezone: Europe/Dublin
    vm_ip_address: 10.10.10.4
    vm_ip_netmask: 255.255.255.0
    vm_ip_gateway: 10.10.10.1
    vm_ip_dns: 193.181.14.10
    vm_ip_domain: ericsson.com

  tasks:
    - name: Create a VM from a template
      vmware_guest:
        hostname: "{{VC_HOST_IP_ADDRESS}}"
        username: "{{VC_USERNAME}}"
        password: "{{VC_PASSWORD}}"
        validate_certs: no
        folder: "{{vm_folder}}"
        name: "{{vm_name}}"
        guest_id: ubuntu64Guest
        state: poweredon
        template: "{{template_name}}"
        datacenter: "{{vm_datacenter}}"
        cluster: "{{vm_cluster}}"
        disk:
          - type: thin
            size_gb: 100
            datastore: "{{DATASTORE}}}"
        networks:
        - name: OAM
          ip: "{{vm_ip_address}}"
          netmask: "{{vm_ip_netmask}}"
          gateway: "{{vm_ip_gateway}}"
        - name: Access
          ip: 10.10.11.4
          netmask: 255.255.255.0
        customization:
          dns_servers:
            - "{{vm_ip_dns}}"
          domain: "{{vm_ip_domain}}"
          hostname: "{{vm_name}}"
          timezone: "{{vm_timezone}}"
      tags: create

    - name: Take snapshot of a VM
      vmware_guest_snapshot:
        hostname: "{{VC_HOST_IP_ADDRESS}}"
        username: "{{VC_USERNAME}}"
        password: "{{VC_PASSWORD}}"
        datacenter: "{{vm_datacenter}}"
        folder: "{{vm_folder}}"
        validate_certs: no
        name: "{{vm_name}}"
        state: present
        snapshot_name: init0
        quiesce: True
      tags: create

    - name: dist upgrade
      delegate_to: "{{vm_ip_address}}"
      become: yes
      apt:
        upgrade: dist
        autoclean: yes
        autoremove: yes
        purge: yes
        update_cache: yes
      tags: update

    - name: Update common packages
      delegate_to: "{{vm_ip_address}}"
      become: yes
      apt:
        name:
          - vim
          - tree
          - python-pip
          - docker.io
          - python-dev
          - libffi-dev
          - gcc
          - libssl-dev
          - python-selinux
          - qemu-kvm
          - libvirt-bin
          - virtinst
          - bridge-utils
          - cpu-checker
        update_cache: yes
      tags: update

    - name: update /etc/hosts
      delegate_to: "{{vm_ip_address}}"
      become: yes
      lineinfile:
        path: /etc/hosts
        regexp: '^{{vm_ip_address}}'
        line: "{{vm_ip_address}}  {{vm_name}} {{vm_name}}.{{vm_ip_domain}} aio"
      tags: update

    - name: pip2 install
      delegate_to: "{{vm_ip_address}}"
      become: yes
      pip:
        name:
          - pip
          - ansible
          - python-openstackclient
          - python-glanceclient
          - python-neutronclient
          - kolla-ansible
        executable: pip2
        state: latest
      tags: update

    - name: copy kolla config files
      delegate_to: "{{vm_ip_address}}"
      become: yes
      command: cp -r /usr/local/share/kolla-ansible/etc_examples/kolla /etc/kolla
      tags: update

    - name: copy all-in-one inventory file
      delegate_to: "{{vm_ip_address}}"
      become: yes
      command: "cp /usr/local/share/kolla-ansible/ansible/inventory/all-in-one /home/hugh/"
      tags: update

    - name: update globals.yml
      delegate_to: "{{vm_ip_address}}"
      become: yes
      lineinfile:
        dest: /etc/kolla/globals.yml
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^#kolla_base_distro:.*', line: 'kolla_base_distro: "ubuntu"' }
        - { regexp: '^#openstack_release: .*', line: 'openstack_release: "queens"' } # queens, pike, ocata
        - { regexp: '^#kolla_install_type:.*', line: 'kolla_install_type: "source"' }
        - { regexp: '^kolla_internal_vip_address:.*', line: 'kolla_internal_vip_address: "10.10.10.254"' } # 10.10.10.1 on vyos
        # - { regexp: '^#enable_haproxy:.*', line: 'enable_haproxy: "no"' }
        - { regexp: '^#network_interface:.*', line: 'network_interface: "ens160"' }
        - { regexp: '^#neutron_external_interface:.*', line: 'neutron_external_interface: "ens192"' }
        - { regexp: '#nova_compute_virt_type:.*', line: 'nova_compute_virt_type: "kvm"' } # qemu
      tags: update

    - name: disable NTP
      delegate_to: "{{vm_ip_address}}"
      become: yes
      lineinfile:
        dest: /usr/local/share/kolla-ansible/ansible/roles/baremetal/defaults/main.yml
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^enable_host_ntp:.*', line: 'enable_host_ntp: false' }
      tags: update

    - name: kolla-genpwd
      delegate_to: "{{vm_ip_address}}"
      become: yes
      command: kolla-genpwd
      tags: update

    - name: deploy tasks
      set_fact:
        os_deploy:
          - sudo su
          - "kolla-ansible -i /home/{{vm_user}}/all-in-one bootstrap-servers"
          - "kolla-ansible -i /home/{{vm_user}}/all-in-one prechecks"
          - "kolla-ansible -i /home/{{vm_user}}/all-in-one deploy"
          - kolla-ansible post-deploy
          - . /etc/kolla/admin-openrc.sh
          - . /usr/local/share/kolla-ansible/init-runonce
      tags: deploy
    - name: print deploy tasks
      debug: msg="{{ os_deploy }}"
      tags: deploy

    - name: get password
      delegate_to: "{{vm_ip_address}}"
      become: yes
      command: egrep -i "keystone_admin_password" /etc/kolla/passwords.yml
      register: rst
      tags: deploy
    - debug: msg="{{rst.stdout}}"
      tags: deploy
